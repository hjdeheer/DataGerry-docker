services:
  datagerry:
    image: becongmbh/datagerry:latest
    hostname: datagerry
    depends_on:
      - db
    # Do NOT publish ports; Traefik will reach the container internally
    # ports:
    #   - "4000:4000"
    environment:
      DATAGERRY_Database_host: "db"
      # Optional but helpful for absolute URLs
      SERVICE_URL_DATAGERRY: "https://gerry.cyberwall.nl"
      SERVICE_FQDN_DATAGERRY: "gerry.cyberwall.nl"
    restart: unless-stopped

    labels:
      - traefik.enable=true

      # HTTP -> HTTPS redirect
      - traefik.http.middlewares.gerry-redirect.redirectscheme.scheme=https
      - traefik.http.routers.gerry-http.rule=Host(`gerry.cyberwall.nl`)
      - traefik.http.routers.gerry-http.entrypoints=http
      - traefik.http.routers.gerry-http.middlewares=gerry-redirect

      # HTTPS router (Let’s Encrypt via Coolify’s Traefik)
      - traefik.http.routers.gerry-https.rule=Host(`gerry.cyberwall.nl`)
      - traefik.http.routers.gerry-https.entrypoints=https
      - traefik.http.routers.gerry-https.tls=true
      - traefik.http.routers.gerry-https.tls.certresolver=letsencrypt

      # Tell Traefik which internal port the app listens on
      - traefik.http.services.gerry.loadbalancer.server.port=4000

      # If Coolify shows a specific proxy network name, uncomment this and set it:
      # - traefik.docker.network=<your-coolify-proxy-network>

  db:
    image: mongo:6.0.25
    hostname: db
    restart: unless-stopped
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb

volumes:
  mongodb-data:
  mongodb-config:
